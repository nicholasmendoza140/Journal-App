{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikko Mendoza\\\\Projects\\\\Journal-App\\\\frontend\\\\src\\\\pages\\\\EntryDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryDetail = () => {\n  _s();\n  const {\n    entryId\n  } = useParams();\n  const [entry, setEntry] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editedBody, setEditedBody] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEntry = async () => {\n      const response = await fetch(`/entries/${entryId}`);\n      const json = await response.json();\n      if (response.ok) {\n        setEntry(json);\n      }\n    };\n    fetchEntry();\n  }, [entryId]);\n  const handleClick = () => {\n    setEditMode(!editMode);\n    setEditedBody(entry.body);\n  };\n  const handleSave = async entry => {\n    //api call to update entry\n    const newEntry = {};\n    const response = await fetch('/entries/' + entry.id, {\n      method: 'UPDATE',\n      body: entry,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    setEditMode(false);\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-detail\",\n    children: entry && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edit-button\",\n        onClick: () => handleClick(entry),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedBody,\n          onChange: e => setEditedBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave(entry),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, entry._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(EntryDetail, \"LzSEHmUAf+NiEw8U6fDyBwHcdls=\", false, function () {\n  return [useParams];\n});\n_c = EntryDetail;\nexport default EntryDetail;\nvar _c;\n$RefreshReg$(_c, \"EntryDetail\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","EntryDetail","_s","entryId","entry","setEntry","editMode","setEditMode","editedBody","setEditedBody","error","setError","fetchEntry","response","fetch","json","ok","handleClick","body","handleSave","newEntry","id","method","headers","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_id","_c","$RefreshReg$"],"sources":["C:/Users/Nikko Mendoza/Projects/Journal-App/frontend/src/pages/EntryDetail.js"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst EntryDetail = () => {\r\n\r\n    const {entryId} = useParams();\r\n    const [entry, setEntry] = useState(null)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editedBody, setEditedBody] = useState(\"\")\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchEntry = async () => {\r\n            const response = await fetch(`/entries/${entryId}`)\r\n            const json = await response.json()\r\n            if (response.ok) {\r\n                setEntry(json)\r\n            }\r\n        }\r\n        fetchEntry()\r\n    }, [entryId])\r\n\r\n    const handleClick =  () => {\r\n        setEditMode(!editMode);\r\n        setEditedBody(entry.body)\r\n    }\r\n\r\n    const handleSave = async (entry) => {\r\n        //api call to update entry\r\n        const newEntry = {}\r\n        const response = await fetch('/entries/' + entry.id, {\r\n            method: 'UPDATE',\r\n            body: entry,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        setEditMode(false);\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"entry-detail\">\r\n            {entry && (\r\n                <div key={entry._id}>\r\n                    <h1>{entry.title}</h1>\r\n                    <span className=\"edit-button\" onClick={() => handleClick(entry)}>\r\n                        <i className=\"material-icons\">edit</i> {/* Material Icons trash can icon */}\r\n                    </span>\r\n                    {editMode ? (\r\n                        <div>\r\n                            <textarea\r\n                                value={editedBody}\r\n                                onChange={(e) => setEditedBody(e.target.value)}\r\n                            />\r\n                            <button onClick={handleSave(entry)}>Save</button>\r\n                        </div>\r\n                    ) : (\r\n                        <p>{entry.body}</p>\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryDetail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}