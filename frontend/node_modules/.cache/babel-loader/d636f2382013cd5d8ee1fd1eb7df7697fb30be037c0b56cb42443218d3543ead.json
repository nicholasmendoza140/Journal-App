{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikko Mendoza\\\\Projects\\\\Journal-App\\\\frontend\\\\src\\\\pages\\\\EntryDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEntriesContext } from '../hooks/useEntriesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryDetail = () => {\n  _s();\n  const {\n    entryId\n  } = useParams();\n  //const [entry, setEntry] = useState(null)\n  const [editMode, setEditMode] = useState(false);\n  const [editedBody, setEditedBody] = useState(\"\");\n  const [error, setError] = useState(null);\n  const {\n    entry,\n    dispatch\n  } = useEntriesContext();\n  useEffect(() => {\n    const fetchEntry = async () => {\n      const response = await fetch(`/entries/${entryId}`);\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_ENTRIES',\n          payload: json\n        });\n      }\n    };\n    fetchEntry();\n    if (entry) {\n      setEditedBody(entry.body);\n    }\n  }, [entryId]);\n  const handleClick = () => {\n    setEditMode(!editMode);\n  };\n  const handleSave = async entry => {\n    //api call to update entry\n    const newEntry = {\n      editedBody\n    };\n    const response = await fetch('/entries/' + entry._id, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        body: editedBody\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(JSON.stringify(newEntry));\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    setEditMode(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-detail\",\n    children: [entry && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edit-button\",\n        onClick: () => handleClick(entry),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedBody,\n          onChange: e => setEditedBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSave(entry),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)]\n    }, entry._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(EntryDetail, \"Q5zn5r1m1imbMjL4KRokh3w6YeE=\", false, function () {\n  return [useParams, useEntriesContext];\n});\n_c = EntryDetail;\nexport default EntryDetail;\nvar _c;\n$RefreshReg$(_c, \"EntryDetail\");","map":{"version":3,"names":["useEffect","useState","useParams","useEntriesContext","jsxDEV","_jsxDEV","EntryDetail","_s","entryId","editMode","setEditMode","editedBody","setEditedBody","error","setError","entry","dispatch","fetchEntry","response","fetch","json","ok","type","payload","body","handleClick","handleSave","newEntry","_id","method","JSON","stringify","headers","console","log","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Nikko Mendoza/Projects/Journal-App/frontend/src/pages/EntryDetail.js"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport { useEntriesContext } from '../hooks/useEntriesContext'\r\n\r\nconst EntryDetail = () => {\r\n\r\n    const {entryId} = useParams();\r\n    //const [entry, setEntry] = useState(null)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editedBody, setEditedBody] = useState(\"\")\r\n    const [error, setError] = useState(null)\r\n\r\n    const {entry, dispatch} = useEntriesContext()\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchEntry = async () => {\r\n            const response = await fetch(`/entries/${entryId}`)\r\n            const json = await response.json()\r\n            if (response.ok) {\r\n                dispatch({type: 'SET_ENTRIES', payload: json})\r\n            }\r\n        }\r\n        fetchEntry()\r\n        if (entry) {\r\n            setEditedBody(entry.body)\r\n        }\r\n    }, [entryId])\r\n    \r\n    const handleClick =  () => {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    const handleSave = async (entry) => {\r\n        //api call to update entry\r\n        const newEntry = {editedBody}\r\n        const response = await fetch('/entries/' + entry._id, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify({ body: editedBody }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        console.log(JSON.stringify(newEntry))\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        setEditMode(false)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"entry-detail\">\r\n            {entry && (\r\n                <div key={entry._id}>\r\n                    <h1>{entry.title}</h1>\r\n                    <span className=\"edit-button\" onClick={() => handleClick(entry)}>\r\n                        <i className=\"material-icons\">edit</i> {/* Material Icons trash can icon */}\r\n                    </span>\r\n                    {editMode ? (\r\n                        <div>\r\n                            <textarea\r\n                                value={editedBody}\r\n                                onChange={(e) => setEditedBody(e.target.value)}\r\n                            />\r\n                            <button onClick={() => handleSave(entry)}>Save</button>\r\n                        </div>\r\n                    ) : (\r\n                        <p>{entry.body}</p>\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n            {error && <div className=\"error\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryDetail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}