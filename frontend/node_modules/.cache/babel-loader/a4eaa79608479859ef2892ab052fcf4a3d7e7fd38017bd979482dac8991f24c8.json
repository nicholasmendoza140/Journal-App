{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikko Mendoza\\\\Projects\\\\Journal-App\\\\frontend\\\\src\\\\pages\\\\EntryDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEntriesContext } from '../hooks/useEntriesContext';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryDetail = () => {\n  _s();\n  const {\n    entryId\n  } = useParams();\n  //const [entry, setEntry] = useState(null)\n  const [editMode, setEditMode] = useState(false);\n  const [editedBody, setEditedBody] = useState(\"\");\n  const [error, setError] = useState(null);\n  const {\n    entries,\n    dispatch\n  } = useEntriesContext();\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchEntry = async () => {\n      if (!user) {\n        return;\n      }\n      const response = await fetch(`/entries/${entryId}`, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_ENTRIES',\n          payload: json\n        });\n      }\n    };\n    fetchEntry();\n  }, [entryId, dispatch, entries]);\n  const handleClick = () => {\n    setEditMode(!editMode);\n    if (!editMode) {\n      setEditedBody(entries.body);\n    }\n  };\n  const handleSave = async entry => {\n    //api call to update entry\n    const newEntry = {\n      editedBody\n    };\n    const response = await fetch('/entries/' + entry._id, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        body: editedBody\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    console.log(JSON.stringify(newEntry));\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      dispatch({\n        type: 'SET_ENTRIES',\n        payload: json\n      });\n    }\n    setEditMode(false);\n  };\n  const handleCancel = () => {\n    setEditMode(!editMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-detail\",\n    children: [entries && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: entries.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edit-button\",\n        onClick: () => handleClick(entries),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"edit-textarea\",\n          value: editedBody,\n          onChange: e => setEditedBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: () => handleSave(entries),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entries.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this)]\n    }, entries._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(EntryDetail, \"z0dZEwKyvcG1nBLi9UIn5BKVgqA=\", false, function () {\n  return [useParams, useEntriesContext, useAuthContext];\n});\n_c = EntryDetail;\nexport default EntryDetail;\nvar _c;\n$RefreshReg$(_c, \"EntryDetail\");","map":{"version":3,"names":["useEffect","useState","useParams","useEntriesContext","useAuthContext","jsxDEV","_jsxDEV","EntryDetail","_s","entryId","editMode","setEditMode","editedBody","setEditedBody","error","setError","entries","dispatch","user","fetchEntry","response","fetch","headers","token","json","ok","type","payload","handleClick","body","handleSave","entry","newEntry","_id","method","JSON","stringify","console","log","handleCancel","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Nikko Mendoza/Projects/Journal-App/frontend/src/pages/EntryDetail.js"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport { useEntriesContext } from '../hooks/useEntriesContext'\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\nconst EntryDetail = () => {\r\n\r\n    const {entryId} = useParams();\r\n    //const [entry, setEntry] = useState(null)\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editedBody, setEditedBody] = useState(\"\")\r\n    const [error, setError] = useState(null)\r\n\r\n    const {entries, dispatch} = useEntriesContext()\r\n    const {user} = useAuthContext()\r\n\r\n    useEffect(() => {\r\n        const fetchEntry = async () => {\r\n            if (!user) {\r\n                return\r\n            }\r\n            const response = await fetch(`/entries/${entryId}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${user.token}`\r\n                }\r\n            })\r\n            const json = await response.json()\r\n            if (response.ok) {\r\n                dispatch({type: 'SET_ENTRIES', payload: json})\r\n            }\r\n        }\r\n        fetchEntry()\r\n    }, [entryId, dispatch, entries])\r\n    \r\n    const handleClick =  () => {\r\n        setEditMode(!editMode);\r\n        if (!editMode) {\r\n            setEditedBody(entries.body)\r\n        }\r\n    }\r\n\r\n    const handleSave = async (entry) => {\r\n        //api call to update entry\r\n        const newEntry = {editedBody}\r\n        const response = await fetch('/entries/' + entry._id, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify({ body: editedBody }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        })\r\n        console.log(JSON.stringify(newEntry))\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            dispatch({type: 'SET_ENTRIES', payload:json})\r\n        }\r\n        setEditMode(false)\r\n        \r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className=\"entry-detail\">\r\n            {entries && (\r\n                <div key={entries._id}>\r\n                    <h1>{entries.title}</h1>\r\n                    <span className=\"edit-button\" onClick={() => handleClick(entries)}>\r\n                        <i className=\"material-icons\">edit</i> {/* Material Icons trash can icon */}\r\n                    </span>\r\n                    {editMode ? (\r\n                        <div className=\"edit-mode\">\r\n                            <textarea\r\n                                className=\"edit-textarea\"\r\n                                value={editedBody}\r\n                                onChange={(e) => setEditedBody(e.target.value)}\r\n                            />\r\n                            <div className=\"edit-buttons\">\r\n                                <button className=\"save-button\" onClick={() => handleSave(entries)}>Save</button>\r\n                                <button className=\"cancel-button\" onClick={handleCancel}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <p>{entries.body}</p>\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n            {error && <div className=\"error\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryDetail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}